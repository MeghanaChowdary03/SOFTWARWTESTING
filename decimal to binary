public class DecimalToBinary {
    public static String decimalToBinary(int decimal) {
        if (decimal == 0) {
            return "0";
        }

        StringBuilder binary = new StringBuilder();
        while (decimal > 0) {
            int remainder = decimal % 2;
            binary.insert(0, remainder);
            decimal = decimal / 2;
        }

        return binary.toString();
    }

    public static void main(String[] args) {
        int decimal = 42; // Replace this with the decimal number you want to convert to binary

        String binary = decimalToBinary(decimal);
        System.out.println("Binary representation: " + binary);
    }
}
TESTCASE
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class DecimalToBinaryTest {

    @Test
    public void testDecimalToBinaryWithZero() {
        int decimal = 0;
        String binary = DecimalToBinary.decimalToBinary(decimal);
        assertEquals("0", binary);
    }
}

